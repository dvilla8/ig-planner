import{_ as a,c as s,o as n,a2 as e}from"./chunks/framework.CAo6mQGM.js";const k=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"installation.md","filePath":"installation.md"}'),t={name:"installation.md"},p=e(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><p>Make sure you have <a href="https://nodejs.org/en/download" target="_blank" rel="noreferrer">Node.js</a> and Yarn installed on your system.<br> Then bootstrap a new planner by running the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-plxnner</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> planner</span></span></code></pre></div><p>Enter the project directory and start your planner:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> planner</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h2 id="project-structure" tabindex="-1">Project structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project structure&quot;">​</a></h2><p>Take a look at the project structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├─ pages</span></span>
<span class="line"><span>├─ public</span></span>
<span class="line"><span>│  └─ user</span></span>
<span class="line"><span>│     └─ instagram</span></span>
<span class="line"><span>│        └─ {username}</span></span>
<span class="line"><span>│           ├─ media</span></span>
<span class="line"><span>│           │  ├─ 1.jpg</span></span>
<span class="line"><span>│           │  ├─ 2.jpg</span></span>
<span class="line"><span>│           │  └─ 3.jpg</span></span>
<span class="line"><span>│           ├─ avatar.jpg</span></span>
<span class="line"><span>│           └─ config.json</span></span>
<span class="line"><span>├─ nuxt.config.ts</span></span>
<span class="line"><span>├─ planner.config.ts</span></span>
<span class="line"><span>└─ package.json</span></span></code></pre></div><p>As in any JavaScript project, dependencies are defined in the <code>package.json</code>.<br> You should update <code>plxnner</code> from time to time to keep the project up-to-date.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Read more about how to set up your planner in <a href="./getting-started.html#configuration">Configuration</a>.</p>`,11),i=[p];function l(o,r,c,h,d,u){return n(),s("div",null,i)}const b=a(t,[["render",l]]);export{k as __pageData,b as default};
