import{e as c,n as d,bN as h,o as u,c as l,_ as m}from"./DQ3ZSoQy.js";const f={class:"dx-app-background"},b=20,p=.8,_=c({__name:"AppBackground",setup(x){let e,o;const n=[],s=()=>({position:{x:0,y:0},radius:15+Math.random()*10,xOff:Math.random()*e.width-20,yOff:Math.random()*e.height,distanceBetweenWaves:50+Math.random()*40,count:e.height+Math.random()*e.height,maxRotation:85,rotation:Math.random()*170-85,rotationDirection:"forward",render(){this.rotationDirection==="forward"?this.rotation<this.maxRotation?this.rotation++:this.rotationDirection="backward":this.rotation>-this.maxRotation?this.rotation--:this.rotationDirection="forward",o.save(),o.translate(this.position.x,this.position.y),o.rotate(this.rotation*Math.PI/180),o.beginPath(),o.fillStyle="rgb(165, 165, 165)",o.arc(0,0,this.radius,0,Math.PI*2),o.fill(),o.restore()}}),i=()=>{o.clearRect(0,0,e.width,e.height);for(const t of n)t.position.x=Math.sin(t.count/t.distanceBetweenWaves)*50+t.xOff,t.position.y=t.count,t.render(),t.count<0-t.radius?t.count=e.height+t.yOff:t.count-=p;requestAnimationFrame(i)},r=()=>{e=document.querySelector("canvas.dx-app-background"),e.width=document.body.clientWidth,e.height=document.body.clientHeight,o=e.getContext("2d");for(let t=0;t<b;t++)n.push(s());requestAnimationFrame(i)},a=()=>{e.width=document.body.clientWidth,e.height=document.body.clientHeight};return d(()=>{r(),window.addEventListener("resize",a)}),h(()=>{window.removeEventListener("resize",a)}),(t,g)=>(u(),l("canvas",f))}}),v=m(_,[["__scopeId","data-v-241620af"]]);export{v as default};
